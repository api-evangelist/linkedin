openapi: 3.1.0
info:
  title: LinkedIn Sales Navigator API
  version: 1.0.0
  description: API for accessing LinkedIn Sales Navigator sales contracts.
servers:
  - url: https://api.linkedin.com/v2
paths:
  /salesContracts:
    get:
      summary: Find all contracts where user has an active seat.
      operationId: contractsByMember
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            enum:
              - contractsByMember
          description: Query parameter to fetch contracts for the member.
      responses:
        '200':
          description: A list of sales contracts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsResponse'
      security:
        - bearerAuth: []
  /salesAnalyticsExportJobs/{jobId}:
    get:
      summary: Fetch the SalesAnalyticsExportJob object by job ID.
      operationId: getSalesAnalyticsExportJob
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the export job.
        - name: contract
          in: query
          required: true
          schema:
            type: string
          description: Sales Navigator contract URN.
      responses:
        '200':
          description: Details of the export job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesAnalyticsExportJob'
      security:
        - bearerAuth: []
  /salesAnalyticsExportJobs:
    post:
      summary: Create a new Sales Analytics Export Job.
      operationId: createSalesAnalyticsExportJob
      parameters:
        - name: action
          in: query
          required: true
          schema:
            type: string
            enum:
              - exportSeatData
              - exportActivityOutcomeData
              - exportActivityData
          description: The type of export job to create.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SalesAnalyticsExportJobRequest'
      responses:
        '200':
          description: Export job successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesAnalyticsExportJobResponse'
      security:
        - bearerAuth: []
  /salesAccessTokens:
    get:
      summary: Retrieve a Sales Access Token for authenticated iframe sessions.
      operationId: getSalesAccessToken
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            enum:
              - viewerAndDeveloperApp
          description: Query parameter for retrieving a Sales Access Token.
      responses:
        '200':
          description: A list of Sales Access Tokens.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesAccessTokenResponse'
      security:
        - bearerAuth: []
  /salesNavigatorProfileAssociations/{instanceId},{partner},{recordId}:
    get:
      summary: >-
        Fetches the corresponding match when provided with a
        SalesNavigatorProfileAssociationKey.
      parameters:
        - name: instanceId
          in: path
          required: true
          description: ID of the CRM instance that synced with Sales Navigator
          schema:
            type: string
        - name: partner
          in: path
          required: true
          description: ID of the CRM partner that synced with Sales Navigator
          schema:
            type: string
        - name: recordId
          in: path
          required: true
          description: ID of the CRM record
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved Sales Navigator Profile Association
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesNavigatorProfileAssociation'
        '400':
          description: Bad request, missing parameter
        '401':
          description: Unauthorized, invalid token
        '403':
          description: Insufficient application access
        '404':
          description: Match unavailable
        '429':
          description: Too many requests
        '500':
          description: Unhandled service error
  /salesNavigatorProfileAssociations:
    get:
      summary: >-
        Batch fetches matches when provided with multiple
        SalesNavigatorProfileAssociationKeys.
      parameters:
        - name: ids
          in: query
          required: true
          description: >-
            List of association keys in the format
            List((instanceId,partner,recordId))
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved batch Sales Navigator Profile Associations
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuses:
                    type: object
                  results:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/SalesNavigatorProfileAssociation'
                  errors:
                    type: object
        '400':
          description: Bad request, missing parameter
        '401':
          description: Unauthorized, invalid token
        '403':
          description: Insufficient application access
        '404':
          description: Match unavailable
        '429':
          description: Too many requests
        '500':
          description: Unhandled service error
  /crmDataValidationExportJobs:
    post:
      summary: Create a CRM Data Validation Export Job
      operationId: createCrmDataValidationExportJob
      parameters:
        - name: crmInstanceId
          in: query
          required: true
          description: >-
            An URN containing the instance ID of the CRM to execute against. The
            URN must be URL encoded.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exportStartAt:
                  type: integer
                  format: int64
                  description: Time at which export was started.
      responses:
        '201':
          description: Export job created successfully.
          headers:
            Location:
              description: Resource location of created job.
              schema:
                type: string
            X-RestLi-Id:
              description: Job ID.
              schema:
                type: integer
                format: int64
        '400':
          description: Bad request, missing or invalid parameter.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden, insufficient access.
        '500':
          description: Internal server error.
  /crmDataValidationExportJobs/{jobId}:
    get:
      summary: Get CRM Data Validation Export Job Status
      operationId: getCrmDataValidationExportJob
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the export job.
          schema:
            type: integer
            format: int64
        - name: crmInstanceId
          in: query
          required: true
          description: >-
            An URN containing the instance ID of the CRM. The URN must be URL
            encoded.
          schema:
            type: string
      responses:
        '200':
          description: Export job status returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    type: integer
                    format: int64
                  exportStartAt:
                    type: integer
                    format: int64
                  exportEndAt:
                    type: integer
                    format: int64
                    nullable: true
                  status:
                    type: string
                    enum:
                      - PROCESSING
                      - COMPLETED
                      - FAILED_DUE_TO_INTERNAL_ERROR
                  downloadUrls:
                    type: array
                    items:
                      type: string
                    nullable: true
                  nextExportStartAt:
                    type: integer
                    format: int64
                    nullable: true
                  expireAt:
                    type: integer
                    format: int64
                    nullable: true
        '400':
          description: Bad request, missing or invalid parameter.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden, insufficient access.
        '404':
          description: Job ID not found.
        '500':
          description: Internal server error.
components:
  schemas:
    ContractsResponse:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/Contract'
        paging:
          $ref: '#/components/schemas/Paging'
    Contract:
      type: object
      properties:
        contract:
          type: string
          description: The urn of this Sales Navigator contract
        name:
          type: string
          description: The name of this contract, appropriate for display to an end-user
        description:
          type: string
          description: A description providing additional information about the contract
          nullable: true
        hasReportingAccess:
          type: boolean
          description: Indicates whether the user can export data for this contract
      required:
        - contract
        - name
        - hasReportingAccess
    SalesAccessTokenResponse:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/SalesAccessToken'
        paging:
          $ref: '#/components/schemas/Paging'
    SalesAccessToken:
      type: object
      properties:
        token:
          type: string
          description: Short-lived, limited-scope OAuth token.
        expiryTime:
          type: integer
          description: Time at which this token will become invalid (seconds since epoch).
      required:
        - token
        - expiryTime
    Paging:
      type: object
      properties:
        count:
          type: integer
        start:
          type: integer
        links:
          type: array
          items:
            type: string
    SalesAnalyticsExportJob:
      type: object
      properties:
        id:
          type: integer
          description: A unique identifier for the job.
        status:
          type: string
          enum:
            - ENQUEUED
            - PROCESSING
            - COMPLETED
            - FAILED_DUE_TO_EXCEEDED_FILE_SIZE_ERROR
            - FAILED_DUE_TO_TIMED_OUT
            - FAILED_DUE_TO_DATA_DELAY
            - FAILED_DUE_TO_INTERNAL_ERROR
          description: Current status of the export job.
        downloadUrl:
          type: string
          nullable: true
          description: URL for downloading the exported data when the job is completed.
        expireAt:
          type: integer
          nullable: true
          description: Expiration timestamp of the download URL.
        rowCount:
          type: integer
          nullable: true
          description: Number of rows in the exported data.
      required:
        - id
        - status
    SalesAnalyticsExportJobRequest:
      type: object
      properties:
        contract:
          type: string
          description: Sales Navigator contract URN.
        startAt:
          type: integer
          description: Start date of the exported data (milliseconds since epoch).
        endAt:
          type: integer
          description: End date of the exported data (milliseconds since epoch).
      required:
        - contract
        - startAt
        - endAt
    SalesAnalyticsExportJobResponse:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/SalesAnalyticsExportJob'
    SalesNavigatorProfileAssociation:
      type: object
      properties:
        member:
          type: string
          description: LinkedIn Person URN
        profile:
          type: string
          format: url
          description: Absolute URL of the Sales Navigator profile
        profilePhoto:
          type: string
          format: url
          description: Absolute URL of the LinkedIn profile photo (optional)
    SalesNavigatorProfileAssociationKey:
      type: object
      properties:
        partner:
          type: string
          description: ID of the CRM partner that synced with Sales Navigator
        instanceId:
          type: string
          description: ID of the CRM instance that synced with Sales Navigator
        recordId:
          type: string
          description: ID of the CRM record
    CrmDataValidationExportJob:
      type: object
      properties:
        jobId:
          type: integer
          format: int64
          description: Export job ID.
        exportStartAt:
          type: integer
          format: int64
          description: Start time of the export.
        exportEndAt:
          type: integer
          format: int64
          nullable: true
          description: End time of the export.
        status:
          type: string
          enum:
            - PROCESSING
            - COMPLETED
            - FAILED_DUE_TO_INTERNAL_ERROR
        downloadUrls:
          type: array
          items:
            type: string
          nullable: true
        nextExportStartAt:
          type: integer
          format: int64
          nullable: true
        expireAt:
          type: integer
          format: int64
          nullable: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
